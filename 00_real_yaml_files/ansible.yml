---
- name: Set up web server and deploy application
  hosts: webservers
  become: true
  vars:
    nginx_package: nginx
    web_root: /var/www/html
    app_repo: "https://github.com/example/myapp.git"
    app_version: "v1.0.0"

  tasks:
    - name: Update and upgrade apt packages
      apt:
        update_cache: yes
        upgrade: dist

    - name: Install Nginx
      apt:
        name: "{{ nginx_package }}"
        state: present

    - name: Start and enable Nginx service
      service:
        name: "{{ nginx_package }}"
        state: started
        enabled: yes

    - name: Create web root directory
      file:
        path: "{{ web_root }}"
        state: directory

    - name: Clone application repository
      git:
        repo: "{{ app_repo }}"
        dest: "{{ web_root }}"
        version: "{{ app_version }}"

    - name: Copy application configuration
      template:
        src: templates/app.conf.j2
        dest: /etc/nginx/sites-available/myapp.conf

    - name: Create symlink for application configuration
      file:
        src: /etc/nginx/sites-available/myapp.conf
        dest: /etc/nginx/sites-enabled/myapp.conf
        state: link

    - name: Remove default Nginx configuration
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent

    - name: Test Nginx configuration
      command: nginx -t
      register: nginx_test
      failed_when: "'successful' not in nginx_test.stdout"

    - name: Reload Nginx
      service:
        name: "{{ nginx_package }}"
        state: reloaded

  handlers:
    - name: Restart Nginx
      service:
        name: "{{ nginx_package }}"
        state: restarted
